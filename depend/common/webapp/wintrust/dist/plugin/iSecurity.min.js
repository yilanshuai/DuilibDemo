
const ISecurity = new function () {
    const plugin = this;

    let defaultParams = {
        "width": 150,
        "height": 22,
        "maxLength": 12,
        "minLength": 6,
        "maskChar": "*",
        "backColor": "#FFFFFF",
        "textColor": "#000000",
        "borderColor": "#FFFFFF",
        "accepts": "[:graph:]+",
        "caption": "吴江农村商业银行",
        "captionColor": "#87011f",
        "captionBold": "true",
        "lang": "zh_CN",
        "softKeyboard": "true",
        "placeholderColor": "#808080",
        "placeholderText": "请输入登录密码",
        "textFontSize": "16",
        "textFontName": "Microsoft YaHei"
    };

    this.initPlugin = function (id, mime, params) {
        for (let param in params) {
            if (null !== defaultParams[param]) {
                defaultParams[param] = params[param];
            }
        }

        let htmlInsert = `<object id="${id}" type="${mime}" style="width: ${defaultParams.width}px; height: ${defaultParams.height}px;">`;
        for (let param in defaultParams) {
            htmlInsert += `<param name="${param}" value="${defaultParams[param]}">`;
        }

        htmlInsert += `</object>`;

        return htmlInsert;
    };

    this.checkValue = function (id1, id2) {
        try {
            let obj1 = document.getElementById(id1);
            let obj2 = document.getElementById(id2);

            if (obj1.getMeasureValue() === obj2.getMeasureValue()) {
                return { error: false, msg: '两次输入不一致，请重新输入！' };
            } else {
                return { error: true };
            }
        } catch (e) {
            toastr.error('密码控件未正常加载或未安装');
        }
    };

    this.setTimestamp = function (id, timestamp) {
        try {
            let obj = document.getElementById(id);

            obj.setTimestamp(timestamp);

            return { error: true };
        } catch (e) {
            return { error: false, msg: '获取密码失败，密码控件未正常加载或未安装' };
        }
    };

    this.getMachineCode = function (id) {
        try {
            let obj = document.getElementById(id);

            let result = obj.getMFM();
            if (result === '') {
                return { error: false, msg: plugin.getLastError(id) };
            } else {
                return { error: true, value: result };
            }
        } catch (e) {
            return { error: false, msg: '获取密码失败，密码控件未正常加载或未安装' };
        }
    };
    
    this.getPassword = function (id, tips) {
        let result, plugin, msg;
        try {
            plugin = document.getElementById(id);
            
            let result = plugin.verify();
            if (result < 0)  {
                msg = tips;

                return { error: false, msg: msg };
            } else {
                return { error: true, value: plugin.getValue() };
            }
        } catch (e) {
            return { error: false, msg: '获取密码失败，密码控件未正常加载或未安装' };
        }
    };

    this.clearValue = function (id) {
        try {
            let obj = document.getElementById(id);
            obj.clear();
        } catch (e) {
            toastr.error('密码控件未正常加载或未安装');
        }
    };

    this.getLastError = function (id) {
        try {
        } catch (e) {
            toastr.error('密码控件未正常加载或未安装');
        }
    };

    this.checkStrength = function (id) {
        try {
            let obj = document.getElementById(id);

            let result = obj.getComplexDegree();
            if (result === 'E') {
                return { error: false, msg: '登录密码不能为空，请重新输入！' };
            } else if (result !== 'F') {
                return { error: false, msg: '输入的登录密码禁止使用，请重新输入！' };
            } else if (result === '') {

            }
        } catch (e) {
            toastr.error('密码控件未正常加载或未安装');
        }
    };

    this.eventStrength = function (id, tips) {
        let obj = document.getElementById(id);
        obj.addEventListener("EventDegree", function (arg) {
            if (arg === "W") {
                document.getElementById(tips).innerHTML = "弱";
            } else if (arg === "M") {
                document.getElementById(tips).innerHTML = "中";
            } else if (arg === "S") {
                document.getElementById(tips).innerHTML = "强";
            } else {
                document.getElementById(tips).innerHTML = "";
            }
        })
    };
};