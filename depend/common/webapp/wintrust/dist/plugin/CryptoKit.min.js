let CryptoKit = new function () {
    this.Algorithm = {
        RSA: "RSA",
        SM2: "SM2"
    };

    this.certType = {
        SINGLE: 1, // 签名单证
        DOUBLE: 2  // 签名加密双证
    };

    this.signPrivateKeyFlags = {

    };

    this.initPlugin = function (id) {
        let html;

        html = document.createElement("embed");
        html.setAttribute('id', id);
        html.setAttribute('type', common.Plugins.CryptoKit.mimeType);
        html.setAttribute('width', 0);
        html.setAttribute('height', 0);

        document.body.appendChild(html);
    };

    this.setCSPInfo = function (id, length, name) {
        try {
            var obj = document.getElementById(id);

            var result = obj.CFCA_SetCSPInfo(length, name);
            if (result) {
                return { error: true };
            } else {
                var msg = obj.GetLastErrorDesc();
                return { error: false, msg: msg };
            }
        } catch (e) {
            return { error: false, msg: '请检测证书下载控件是否安装！' };
        }
    };

    this.setKeyAlgorithm = function (algorithm) {
        try {
            var obj = document.getElementById(id);

            var result = obj.CFCA_SetKeyAlgorithm(algorithm);
            if (result) {
                return { error: true };
            } else {
                var msg = obj.GetLastErrorDesc();
                return { error: false, msg: msg };
            }
        } catch (e) {
            return { error: false, msg: '请检测证书下载控件是否安装！' };
        }
    };

    this.genCertRequisition = function (type, DN, flags) {
        try {
            var obj = document.getElementById(id);

            var result = obj.CFCA_PKCS10CertRequisition(type, DN, flags);
            if (result) {
                return { error: true };
            } else {
                var msg = obj.GetLastErrorDesc();
                return { error: false, msg: msg };
            }
        } catch (e) {
            return { error: false, msg: '请检测证书下载控件是否安装！' };
        }
    };

    this.getContainerName = function (id) {
        try {
            var obj = document.getElementById(id);

            var result = obj.CFCA_GetContainer();
            if (result) {
                return { error: true, value: result };
            } else {
                var msg = obj.GetLastErrorDesc();
                return { error: false, msg: msg };
            }
        } catch (e) {
            return { error: false, msg: '请检测证书下载控件是否安装！' };
        }
    };

    this.importSignCert = function (typy, cert, name) {
        try {
            var obj = document.getElementById(id);

            var result = obj.CFCA_ImportSignCert(typy, cert, name);
            if (result) {
                return { error: true, msg: "签名证书下载成功！" };
            } else {
                var msg = obj.GetLastErrorDesc();
                return { error: false, msg: msg };
            }
        } catch (e) {
            return { error: false, msg: '请检测证书下载控件是否安装！' };
        }
    };

    this.importEncryptCert = function (typy, cert, name) {
        try {
            var obj = document.getElementById(id);

            var result = obj.CFCA_ImportEncryptCert(typy, cert, name);
            if (result) {
                return { error: true, msg: "加密证书下载成功！" };
            } else {
                var msg = obj.GetLastErrorDesc();
                return { error: false, msg: msg };
            }
        } catch (e) {
            return { error: false, msg: '请检测证书下载控件是否安装！' };
        }
    };
};